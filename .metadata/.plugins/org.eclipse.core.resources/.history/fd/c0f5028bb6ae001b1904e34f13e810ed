

object MethodNotations extends App {

  class Person(val name: String, favouritemovie: String){
    def likes(movie: String): Boolean = 
      movie.equalsIgnoreCase(favouritemovie)
  
    def hangoutwith(person: Person): String = s"${this.name} hang outs with ${person.name}"
  
    def unary_! : String = s"$name, hello"
    
    def isAlive: Boolean = true
    
    def apply(): String = s"hi my name is ${this.name} my favouroitte moview is $favouritemovie"
  }
    val mary = new Person("Mary","Inception")
    println(mary.likes("Inception"))
    println(mary likes "inception") // equivalent natural language
    // infix notation = operator notation (syntactic sugar)
    
    // operators in scala
//    
    val hary = new Person("Hary","mag")
    println(hary likes "mag")
    println(hary hangoutwith mary)
      
    
    // ALL OPERATORS ARE METHODS
    
    // AKKA actors have ! ?
    
    // prefix notation
       val x = -1 // equivalent with 1.unary_-
       val y = 1.unary_-
       
       println(!mary)
       println(mary.unary_!)
       //postfix notation
       println(mary isAlive)
       println(mary.isAlive)
       
        mary.apply()
       
       
       // apply method
       
}